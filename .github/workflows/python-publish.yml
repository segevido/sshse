name: Publish Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build distributions
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Ensure release tag matches project version
        if: github.event_name == 'release'
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: |
          python - <<'PY'
          import os
          from pathlib import Path

          import tomllib

          release = os.environ["RELEASE_TAG"].lstrip("v")
          data = tomllib.loads(Path("pyproject.toml").read_text())
          version = data["project"]["version"]
          if release != version:
              raise SystemExit(
                  "Release tag {release} does not match project version {version}".format(
                      release=release, version=version
                  )
              )
          PY

      - name: Build distributions
        run: python -m build

      - name: Check distributions
        run: twine check dist/*

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/
          if-no-files-found: error

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/project/sshse/
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true
